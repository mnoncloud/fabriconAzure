The hyperledger fabric template "Hyperledger Fabric Single Member Blockchain" on Azure provisions a set of virtual machines with the 
following components deployed. 
1. CA, hyperledger/fabric-ca:x86_64-1.0.1
2. Orderer, hyperledger/fabric-orderer:x86_64-1.0.1
3. Peers (2 nodes - peer0 and peer1), hyperledger/fabric-peer:x86_64-1.0.1
All of these on separate virtual machines but within the same virtual network. 

The template deployment process does not create any channel, so this doc outlines the steps to:
1. Create a channel 
2. Add both the peers to the same channel 

As a pre-requisite, we should have deployed the Hyperledger Fabric template from the Azure Market Place and have the nodes running. 
In case you need to deploy it, please refer to this doc - https://gallery.technet.microsoft.com/Hyperledger-Fabric-Single-2324cecb 

Step 1 - Creating a Channel 

1. SSH into the peer0. You should be able to find the IP address from the portal and the port is 3002 
  ssh azureuser@<Your IP Address> -p 3002 

2. Verify that the peer has been started 
docker ps -a

3. Start a CLI instance using the following command:

  docker run -d --name CLI -v $HOME/crypto-config:/crypto-config \
  -v $HOME/channel.tx:/channel.tx \
  hyperledger/fabric-peer:x86_64-1.0.1 

4. Creating the channel 

Verify the container is up and the peer is running 

Get into the CLI instance: 

  docker exec -it CLI /bin/bash 

Set the environment variables:
  export CORE_PEER_ADDRESS="<your-prefix>-peer0:7051"
  export CORE_PEER_LOCALMSPID="Org1MSP"
  export CORE_PEER_MSPCONFIGPATH=/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

Create the channel, we will use the name "mychannel", you could replace it with any other name

  peer channel create -o <your-prefix>-orderer0:7050 -c mychannel -f channel.tx

This will create the genesis block generally the name of the file will be channelname.block, so in our case it is mychannel.block

5. Join the Peer0 to the channel:
  peer channel join -b mychannel.block

Step 2 - Adding another Peer to the channel 

1. Join the Peer1 to the channel 

Setting the environment variables:
  export CORE_PEER_ADDRESS=<your-prefix>-peer1:7051
  export CORE_PEER_LOCALMSPID="Org1MSP"
  export CORE_PEER_MSPCONFIGPATH=/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

Joining the peer to the channel:
  peer channel join -b mychannel.block -o <your-prefix>-orderer0:7050

Validate that the peers have joined the channel:

1. SSH into Peer0 
  ssh azureuser@<Your IP Address> -p 3002 
  docker ps --format "{{.Names}}"
  docker exec -it <container-name> /bin/bash 
  peer channel list 
  
2. SSH into Peer1 
  ssh azureuser@<Your IP Address> -p 3003 
  docker ps --format "{{.Names}}"
  docker exec -it <container-name> /bin/bash 
  peer channel list 
  
You should find the same channel -"mychannel" name as a result of these commands in the two peers. 

This completes the process of creating a channel and joining the two peers to the channel. 

Note: 
1. The prefix can be obtained from the output of the template deployments. Select Resource group, Deployments and then click on 
the first deployment to see the outputs. 
2. Copying the commands split into multiple lines may give errors at times, preferably copy each line and then paste into your ssh 
window to avoid errors. "\" is the line continution character. 
